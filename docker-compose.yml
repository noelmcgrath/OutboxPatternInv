
services:
  mysql:
    build:
      context: ./sqlserver
    container_name: mysql
    ports:
      - "1433:1433"
    restart: unless-stopped
    # healthcheck:
    #   test: [ "CMD", "/opt/mssql-tools18/bin/sqlcmd", "-S", "localhost", "-U", "SA", "-P", "YourStron$$88gPassword", "-Q", "SELECT 1", "-C"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
    #   start_period: 20s

  myrabbit:
    build:
      context: ./rabbitmq
    container_name: myrabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  mywebapp:
    build:
      context: .
      dockerfile: MyWebApp/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    # Optional: set UID if needed for USER $APP_UID to work correctly
    user: "${APP_UID:-1000}"
    depends_on:
      myrabbit:
        condition: service_healthy
      mysql:
        condition: service_started


  outboxprocessorapp:
    build:
      context: .
      dockerfile: OutboxProcessor/Dockerfile
    ports:
      - "10001:10001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    # Optional: set UID if needed for USER $APP_UID to work correctly
    user: "${APP_UID:-1000}"
    depends_on:
      myrabbit:
        condition: service_healthy
      mysql:
        condition: service_started

  consumerapp:
    build:
      context: .
      dockerfile: MyConsumer/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    # Optional: set UID if needed for USER $APP_UID to work correctly
    user: "${APP_UID:-1000}"
    depends_on:
      myrabbit:
        condition: service_healthy
      mysql:
        condition: service_started
